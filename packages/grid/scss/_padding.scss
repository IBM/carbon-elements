@import '@carbon/layout/scss/breakpoint';
@import '@carbon/layout/scss/mini-unit';
@import 'variables';

@mixin column-rules($col-width, $size, $number, $gutter) {
  .#{$prefix}--grid.#{$prefix}--grid--padding
    .#{$prefix}--col-#{$size}-#{$number} {
    padding: mini-units(2) mini-units(2);
  }

  .#{$prefix}--grid.#{$prefix}--grid--padding.#{$prefix}--grid--gutter
    .#{$prefix}--col-#{$size}-#{$number} {
    padding: mini-units(2) #{$gutter + mini-units(2)};
  }
}

@mixin columns($breakpoint, $values) {
  $columns: map-get($values, columns);
  $width: map-get($values, width);
  $gutter: map-get($values, gutter);

  @for $i from 0 through $columns {
    $col-width: (100% / $columns) * $i;
    @include column-rules($col-width, $breakpoint, $i, $gutter);
  }
}

@each $breakpoint, $values in $breakpoints {
  @if $breakpoint == sm {
    @include columns($breakpoint, $values);
  } @else {
    @include breakpoint($breakpoint) {
      @include columns($breakpoint, $values);
    }
  }
}

.#{$prefix}--grid.#{$prefix}--grid--padding
  > .#{$prefix}--row
  > .#{$prefix}--col {
  $gutter: map-deep-get($breakpoints, sm, gutter);

  padding: mini-units(2) mini-units(1);
}

.#{$prefix}--grid.#{$prefix}--grid--padding.#{$prefix}--grid--gutter
  > .#{$prefix}--row
  > .#{$prefix}--col {
  $gutter: map-deep-get($breakpoints, sm, gutter);

  padding: mini-units(2) #{$gutter + mini-units(1)};
}
