@import '@carbon/layout/scss/breakpoint';
@import 'font-family';
@import 'scale';

$component-01: (
  font-family: font-family('sans'),
  font-size: type-scale(2),
  font-weight: font-weight('regular'),
  line-height: rem(18px),
  letter-spacing: 0.16px,
);

$component-body-01: (
  font-family: font-family('sans'),
  font-size: type-scale(2),
  font-weight: font-weight('regular'),
  line-height: rem(20px),
  letter-spacing: 0.16px,
);

$component-header-01: (
  font-family: font-family('sans'),
  font-size: type-scale(2),
  font-weight: font-weight('semibold'),
  line-height: rem(18px),
  letter-spacing: 0.16px,
);

$component-02: (
  font-family: font-family('sans'),
  font-size: type-scale(3),
  font-weight: font-weight('regular'),
  line-height: rem(22px),
  letter-spacing: 0,
);

$component-body-02: (
  font-family: font-family('sans'),
  font-size: type-scale(3),
  font-weight: font-weight('regular'),
  line-height: rem(24px),
  letter-spacing: 0,
);

$label-01: (
  font-family: font-family('sans'),
  font-size: type-scale(1),
  font-weight: font-weight('regular'),
  line-height: rem(16px),
  letter-spacing: 0.32px,
);

$helper-text-01: (
  font-family: font-family('sans'),
  font-size: type-scale(1),
  font-weight: font-weight('regular'),
  font-style: italic,
  line-height: rem(16px),
  letter-spacing: 0.32px,
);

$code-01: (
  font-family: font-family('mono'),
  font-weight: font-weight('regular'),
  font-size: type-scale(1),
  line-height: rem(16px),
  letter-spacing: 0.32px,
) !default;

$code-02: (
  font-family: font-family('mono'),
  font-weight: font-weight('regular'),
  font-size: type-scale(2),
  line-height: rem(20px),
  letter-spacing: 0.32px,
) !default;

$heading-01: (
  font-family: font-family('sans'),
  font-size: type-scale(5),
  font-weight: font-weight('regular'),
  line-height: rem(26px),
  letter-spacing: 0,
) !default;

$heading-02: (
  font-family: font-family('sans'),
  font-size: type-scale(6),
  font-weight: font-weight('regular'),
  line-height: rem(30px),
  letter-spacing: 0,
) !default;

$heading-03: (
  font-family: font-family('sans'),
  font-size: type-scale(8),
  font-weight: font-weight('regular'),
  line-height: rem(40px),
  letter-spacing: 0,
) !default;

$body-01: (
  font-family: font-family('sans'),
  font-weight: font-weight('regular'),
  font-size: type-scale(1),
  line-height: rem(16px),
  letter-spacing: 0.02rem,
);

$body-02: (
  font-family: font-family('sans'),
  font-weight: font-weight('regular'),
  font-size: type-scale(2),
  line-height: rem(20px),
  letter-spacing: 0.01rem,
);

$body-03: (
  font-family: font-family('sans'),
  font-weight: font-weight('regular'),
  font-size: type-scale(3),
  line-height: rem(24px),
  letter-spacing: 0,
);

// prettier-ignore
$tokens: (
  component-01: $component-01,
  component-body-01: $component-body-01,
  component-header-01: $component-header-01,

  component-02: $component-02,
  component-body-02: $component-body-02,

  // Code styles
  code-01: $code-01,
  code-02: $code-02,

  // Heading styles
  heading-01: $heading-01,
  heading-02: $heading-02,
  heading-03: $heading-03,

  // Body styles
  body-01: $body-01,
  body-02: $body-02,
  body-03: $body-03,
);

@mixin properties($map) {
  @each $name, $value in $map {
    #{$name}: $value;
  }
}

@mixin type-style($name, $responsive: false) {
  @if not map-has-key($tokens, $name) {
    @error 'Unable to find a token with the name: `#{$name}`';
  }

  $token: map-get($tokens, $name);
  $default-values: map-remove($token, 'breakpoints');

  @include properties($default-values);

  @if $responsive == true {
    @if map-has-key($token, 'breakpoints') {
      $breakpoints: map-get($token, 'breakpoints');
      @each $name, $value in $breakpoints {
        @include breakpoint($name) {
          @include properties($value);
        }
      }
    }
  }
}
